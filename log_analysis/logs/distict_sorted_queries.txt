PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>             PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>             SELECT ?resource ?statusValue             WHERE {                 {                     SELECT ?graphURI WHERE {                         GRAPH ?graphURI {}                         FILTER regex(str(?graphURI), "^timestamp:")                     }                     ORDER BY DESC(xsd:integer(replace(str(?graphURI), "^timestamp:", "")))                     LIMIT 1                 }                 GRAPH ?graphURI {                     SELECT ?pod ?resource ?statusValue WHERE {                         ?resource rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource>.                         ?resource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Container".                         ?resource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.                         ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?statusValue.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Succeeded' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Failed' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Unknown' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'NotReady' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'terminated' }.                     }                 }             }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>             PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>             SELECT ?resource ?statusValue             WHERE {                 {                     SELECT ?graphURI WHERE {                         GRAPH ?graphURI {}                         FILTER regex(str(?graphURI), "^timestamp:")                     }                     ORDER BY DESC(xsd:integer(replace(str(?graphURI), "^timestamp:", "")))                     LIMIT 1                 }                 GRAPH ?graphURI {                     SELECT ?pod ?resource ?statusValue WHERE {                         ?resource rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource>.                         ?resource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".                         ?resource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.                         ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?statusValue.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Succeeded' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Failed' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Unknown' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'NotReady' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'terminated' }.                     }                 }             }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>             PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>             SELECT ?resource ?statusValue             WHERE {                 {                     SELECT ?graphURI WHERE {                         GRAPH ?graphURI {}                         FILTER regex(str(?graphURI), "^timestamp:")                     }                     ORDER BY DESC(xsd:integer(replace(str(?graphURI), "^timestamp:", "")))                     LIMIT 1                 }                 GRAPH ?graphURI {                     SELECT ?pod ?resource ?statusValue WHERE {                         ?resource rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource>.                         ?resource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".                         ?resource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.                         ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?statusValue.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Succeeded' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Failed' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'Unknown' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'NotReady' }.                         FILTER NOT EXISTS{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> 'terminated' }.                     }                 }             }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?graphURI WHERE {   GRAPH ?graphURI {}   FILTER regex(str(?graphURI), "^timestamp:") } # ORDER BY ASC(xsd:integer(replace(str(?graphURI), "^timestamp:", "")))
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>     PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>     PREFIX glc: <https://glaciation-project.eu/MetadataReferenceModel#>     PREFIX saref: <https://saref.etsi.org/core/>      SELECT * WHERE {         { GRAPH ?g              {             ?s saref:hasIdentifier ?robotId .             ?s glc:hasSubResource ?yolo .             ?yolo glc:makesMeasurement ?label .             ?label saref:relatesToProperty glc:name .             ?label saref:hasValue ?v .             ?yolo glc:makesMeasurement ?conf .             ?conf saref:relatesToProperty glc:confidence .             ?conf saref:hasValue ?confVal .             }         }          FILTER (STRSTARTS(STR(?g), 'https://glaciation-project.eu/uc/2'))     }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1704067200000 as ?intervalStart).   BIND(1739318340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1735689600000 as ?intervalStart).   BIND(1739318340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739365200000 as ?intervalStart).   BIND(1739368800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739318400000 as ?intervalStart).   BIND(1739365200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1734912000000 as ?intervalStart).   BIND(1734998340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739365200000 as ?intervalStart).   BIND(1739366100000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739361600000 as ?intervalStart).   BIND(1739363400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1734912000000 as ?intervalStart).   BIND(1766534340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739332800000 as ?intervalStart).   BIND(1739334600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739350800000 as ?intervalStart).   BIND(1739352600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739336400000 as ?intervalStart).   BIND(1739338200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739336400000 as ?intervalStart).   BIND(1739338200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739336400000 as ?intervalStart).   BIND(1739338200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739336400000 as ?intervalStart).   BIND(1739338200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739340000000 as ?intervalStart).   BIND(1739341800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739340000000 as ?intervalStart).   BIND(1739341800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739340000000 as ?intervalStart).   BIND(1739341800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739340000000 as ?intervalStart).   BIND(1739341800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739343600000 as ?intervalStart).   BIND(1739345400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739343600000 as ?intervalStart).   BIND(1739345400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739350800000 as ?intervalStart).   BIND(1739352600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739343600000 as ?intervalStart).   BIND(1739345400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739347200000 as ?intervalStart).   BIND(1739349000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739347200000 as ?intervalStart).   BIND(1739349000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739347200000 as ?intervalStart).   BIND(1739349000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739347200000 as ?intervalStart).   BIND(1739349000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739145600000 as ?intervalStart).   BIND(1739231940000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739145600000 as ?intervalStart).   BIND(1739318340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738368000000 as ?intervalStart).   BIND(1739318340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739343600000 as ?intervalStart).   BIND(1739345400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739307600000 as ?intervalStart).   BIND(1739309400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739311200000 as ?intervalStart).   BIND(1739313000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739311200000 as ?intervalStart).   BIND(1739313000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739311200000 as ?intervalStart).   BIND(1739313000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739311200000 as ?intervalStart).   BIND(1739313000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739314800000 as ?intervalStart).   BIND(1739316600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739314800000 as ?intervalStart).   BIND(1739316600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739314800000 as ?intervalStart).   BIND(1739316600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739314800000 as ?intervalStart).   BIND(1739316600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739318400000 as ?intervalStart).   BIND(1739320200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739318400000 as ?intervalStart).   BIND(1739320200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739318400000 as ?intervalStart).   BIND(1739320200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739318400000 as ?intervalStart).   BIND(1739320200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739350800000 as ?intervalStart).   BIND(1739352600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739322000000 as ?intervalStart).   BIND(1739323800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739322000000 as ?intervalStart).   BIND(1739323800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739322000000 as ?intervalStart).   BIND(1739323800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739325600000 as ?intervalStart).   BIND(1739327400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739325600000 as ?intervalStart).   BIND(1739327400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739325600000 as ?intervalStart).   BIND(1739327400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739325600000 as ?intervalStart).   BIND(1739327400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739329200000 as ?intervalStart).   BIND(1739331000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739329200000 as ?intervalStart).   BIND(1739331000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739329200000 as ?intervalStart).   BIND(1739331000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739329200000 as ?intervalStart).   BIND(1739331000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739332800000 as ?intervalStart).   BIND(1739334600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739332800000 as ?intervalStart).   BIND(1739334600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739332800000 as ?intervalStart).   BIND(1739334600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739322000000 as ?intervalStart).   BIND(1739323800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739372400000 as ?intervalStart).   BIND(1739374200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739372400000 as ?intervalStart).   BIND(1739374200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739386800000 as ?intervalStart).   BIND(1739388600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739386800000 as ?intervalStart).   BIND(1739388600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739386800000 as ?intervalStart).   BIND(1739388600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739386800000 as ?intervalStart).   BIND(1739388600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739390400000 as ?intervalStart).   BIND(1739392200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739390400000 as ?intervalStart).   BIND(1739392200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739390400000 as ?intervalStart).   BIND(1739392200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739390400000 as ?intervalStart).   BIND(1739392200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739394000000 as ?intervalStart).   BIND(1739395800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739394000000 as ?intervalStart).   BIND(1739395800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739307600000 as ?intervalStart).   BIND(1739309400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739394000000 as ?intervalStart).   BIND(1739395800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739397600000 as ?intervalStart).   BIND(1739399400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739397600000 as ?intervalStart).   BIND(1739399400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739397600000 as ?intervalStart).   BIND(1739399400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739397600000 as ?intervalStart).   BIND(1739399400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739401200000 as ?intervalStart).   BIND(1739403000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739401200000 as ?intervalStart).   BIND(1739403000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739401200000 as ?intervalStart).   BIND(1739403000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739401200000 as ?intervalStart).   BIND(1739403000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739404800000 as ?intervalStart).   BIND(1739406600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739404800000 as ?intervalStart).   BIND(1739406600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739404800000 as ?intervalStart).   BIND(1739406600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739394000000 as ?intervalStart).   BIND(1739395800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739350800000 as ?intervalStart).   BIND(1739352600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739354400000 as ?intervalStart).   BIND(1739356200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739354400000 as ?intervalStart).   BIND(1739356200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739354400000 as ?intervalStart).   BIND(1739356200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739354400000 as ?intervalStart).   BIND(1739356200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1704067200000 as ?intervalStart).   BIND(1739318340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1735689600000 as ?intervalStart).   BIND(1739318340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(0 as ?intervalStart).   BIND(1739318340000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739358000000 as ?intervalStart).   BIND(1739359800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739358000000 as ?intervalStart).   BIND(1739359800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739358000000 as ?intervalStart).   BIND(1739359800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739358000000 as ?intervalStart).   BIND(1739359800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739372400000 as ?intervalStart).   BIND(1739374200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739318400000 as ?intervalStart).   BIND(1739404740000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739361600000 as ?intervalStart).   BIND(1739363400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739361600000 as ?intervalStart).   BIND(1739363400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739361600000 as ?intervalStart).   BIND(1739363400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739365200000 as ?intervalStart).   BIND(1739367000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739365200000 as ?intervalStart).   BIND(1739367000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739365200000 as ?intervalStart).   BIND(1739367000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739365200000 as ?intervalStart).   BIND(1739367000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739368800000 as ?intervalStart).   BIND(1739370600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739368800000 as ?intervalStart).   BIND(1739370600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739368800000 as ?intervalStart).   BIND(1739370600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739368800000 as ?intervalStart).   BIND(1739370600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739372400000 as ?intervalStart).   BIND(1739374200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738411200000 as ?intervalStart).   BIND(1739363400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739232000000 as ?intervalStart).   BIND(1739233800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739232000000 as ?intervalStart).   BIND(1739233800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739235600000 as ?intervalStart).   BIND(1739237400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739235600000 as ?intervalStart).   BIND(1739237400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739235600000 as ?intervalStart).   BIND(1739237400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739235600000 as ?intervalStart).   BIND(1739237400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739239200000 as ?intervalStart).   BIND(1739241000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739239200000 as ?intervalStart).   BIND(1739241000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739239200000 as ?intervalStart).   BIND(1739241000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739239200000 as ?intervalStart).   BIND(1739241000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739242800000 as ?intervalStart).   BIND(1739244600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739242800000 as ?intervalStart).   BIND(1739244600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739242800000 as ?intervalStart).   BIND(1739244600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739404800000 as ?intervalStart).   BIND(1739406600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739246400000 as ?intervalStart).   BIND(1739248200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739246400000 as ?intervalStart).   BIND(1739248200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739246400000 as ?intervalStart).   BIND(1739248200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739246400000 as ?intervalStart).   BIND(1739248200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739250000000 as ?intervalStart).   BIND(1739251800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739250000000 as ?intervalStart).   BIND(1739251800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739250000000 as ?intervalStart).   BIND(1739251800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739250000000 as ?intervalStart).   BIND(1739251800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739253600000 as ?intervalStart).   BIND(1739255400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739253600000 as ?intervalStart).   BIND(1739255400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739253600000 as ?intervalStart).   BIND(1739255400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739253600000 as ?intervalStart).   BIND(1739255400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739257200000 as ?intervalStart).   BIND(1739259000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739242800000 as ?intervalStart).   BIND(1739244600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739206800000 as ?intervalStart).   BIND(1739208600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739206800000 as ?intervalStart).   BIND(1739208600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739210400000 as ?intervalStart).   BIND(1739212200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739210400000 as ?intervalStart).   BIND(1739212200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739210400000 as ?intervalStart).   BIND(1739212200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739210400000 as ?intervalStart).   BIND(1739212200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739214000000 as ?intervalStart).   BIND(1739215800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739214000000 as ?intervalStart).   BIND(1739215800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739214000000 as ?intervalStart).   BIND(1739215800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739214000000 as ?intervalStart).   BIND(1739215800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739217600000 as ?intervalStart).   BIND(1739219400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739217600000 as ?intervalStart).   BIND(1739219400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739217600000 as ?intervalStart).   BIND(1739219400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739232000000 as ?intervalStart).   BIND(1739233800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739221200000 as ?intervalStart).   BIND(1739223000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739221200000 as ?intervalStart).   BIND(1739223000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739221200000 as ?intervalStart).   BIND(1739223000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739221200000 as ?intervalStart).   BIND(1739223000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739224800000 as ?intervalStart).   BIND(1739226600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739224800000 as ?intervalStart).   BIND(1739226600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739224800000 as ?intervalStart).   BIND(1739226600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739224800000 as ?intervalStart).   BIND(1739226600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739228400000 as ?intervalStart).   BIND(1739230200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739228400000 as ?intervalStart).   BIND(1739230200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739228400000 as ?intervalStart).   BIND(1739230200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739228400000 as ?intervalStart).   BIND(1739230200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739232000000 as ?intervalStart).   BIND(1739233800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739217600000 as ?intervalStart).   BIND(1739219400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739282400000 as ?intervalStart).   BIND(1739284200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739286000000 as ?intervalStart).   BIND(1739287800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739286000000 as ?intervalStart).   BIND(1739287800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739286000000 as ?intervalStart).   BIND(1739287800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739286000000 as ?intervalStart).   BIND(1739287800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739289600000 as ?intervalStart).   BIND(1739291400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739289600000 as ?intervalStart).   BIND(1739291400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739289600000 as ?intervalStart).   BIND(1739291400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739289600000 as ?intervalStart).   BIND(1739291400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739293200000 as ?intervalStart).   BIND(1739295000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739293200000 as ?intervalStart).   BIND(1739295000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739293200000 as ?intervalStart).   BIND(1739295000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739293200000 as ?intervalStart).   BIND(1739295000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739257200000 as ?intervalStart).   BIND(1739259000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739296800000 as ?intervalStart).   BIND(1739298600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739296800000 as ?intervalStart).   BIND(1739298600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739296800000 as ?intervalStart).   BIND(1739298600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739300400000 as ?intervalStart).   BIND(1739302200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739300400000 as ?intervalStart).   BIND(1739302200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739300400000 as ?intervalStart).   BIND(1739302200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739300400000 as ?intervalStart).   BIND(1739302200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739304000000 as ?intervalStart).   BIND(1739305800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739304000000 as ?intervalStart).   BIND(1739305800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739304000000 as ?intervalStart).   BIND(1739305800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739304000000 as ?intervalStart).   BIND(1739305800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739307600000 as ?intervalStart).   BIND(1739309400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739307600000 as ?intervalStart).   BIND(1739309400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739296800000 as ?intervalStart).   BIND(1739298600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739257200000 as ?intervalStart).   BIND(1739259000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739257200000 as ?intervalStart).   BIND(1739259000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739260800000 as ?intervalStart).   BIND(1739262600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739260800000 as ?intervalStart).   BIND(1739262600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739260800000 as ?intervalStart).   BIND(1739262600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739260800000 as ?intervalStart).   BIND(1739262600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739264400000 as ?intervalStart).   BIND(1739266200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739264400000 as ?intervalStart).   BIND(1739266200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739264400000 as ?intervalStart).   BIND(1739266200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739264400000 as ?intervalStart).   BIND(1739266200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739268000000 as ?intervalStart).   BIND(1739269800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739268000000 as ?intervalStart).   BIND(1739269800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739268000000 as ?intervalStart).   BIND(1739269800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739282400000 as ?intervalStart).   BIND(1739284200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739271600000 as ?intervalStart).   BIND(1739273400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739271600000 as ?intervalStart).   BIND(1739273400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739271600000 as ?intervalStart).   BIND(1739273400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739271600000 as ?intervalStart).   BIND(1739273400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739275200000 as ?intervalStart).   BIND(1739277000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739275200000 as ?intervalStart).   BIND(1739277000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739275200000 as ?intervalStart).   BIND(1739277000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739275200000 as ?intervalStart).   BIND(1739277000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739278800000 as ?intervalStart).   BIND(1739280600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739278800000 as ?intervalStart).   BIND(1739280600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739278800000 as ?intervalStart).   BIND(1739280600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739278800000 as ?intervalStart).   BIND(1739280600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739282400000 as ?intervalStart).   BIND(1739284200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739282400000 as ?intervalStart).   BIND(1739284200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739268000000 as ?intervalStart).   BIND(1739269800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739534400000 as ?intervalStart).   BIND(1739536200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739534400000 as ?intervalStart).   BIND(1739536200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739534400000 as ?intervalStart).   BIND(1739536200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739538000000 as ?intervalStart).   BIND(1739539800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739538000000 as ?intervalStart).   BIND(1739539800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739538000000 as ?intervalStart).   BIND(1739539800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739538000000 as ?intervalStart).   BIND(1739539800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739793600000 as ?intervalStart).   BIND(1739795400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739793600000 as ?intervalStart).   BIND(1739795400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739793600000 as ?intervalStart).   BIND(1739795400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739793600000 as ?intervalStart).   BIND(1739795400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739797200000 as ?intervalStart).   BIND(1739799000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739797200000 as ?intervalStart).   BIND(1739799000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739206800000 as ?intervalStart).   BIND(1739208600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739797200000 as ?intervalStart).   BIND(1739799000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739800800000 as ?intervalStart).   BIND(1739802600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739800800000 as ?intervalStart).   BIND(1739802600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739800800000 as ?intervalStart).   BIND(1739802600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739800800000 as ?intervalStart).   BIND(1739802600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739804400000 as ?intervalStart).   BIND(1739806200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739804400000 as ?intervalStart).   BIND(1739806200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739804400000 as ?intervalStart).   BIND(1739806200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739804400000 as ?intervalStart).   BIND(1739806200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739808000000 as ?intervalStart).   BIND(1739809800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739811600000 as ?intervalStart).   BIND(1739813400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739815200000 as ?intervalStart).   BIND(1739817000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739815200000 as ?intervalStart).   BIND(1739817000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739797200000 as ?intervalStart).   BIND(1739799000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739509200000 as ?intervalStart).   BIND(1739511000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739509200000 as ?intervalStart).   BIND(1739511000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739509200000 as ?intervalStart).   BIND(1739511000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739512800000 as ?intervalStart).   BIND(1739514600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739512800000 as ?intervalStart).   BIND(1739514600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739512800000 as ?intervalStart).   BIND(1739514600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739512800000 as ?intervalStart).   BIND(1739514600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739516400000 as ?intervalStart).   BIND(1739518200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739516400000 as ?intervalStart).   BIND(1739518200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739516400000 as ?intervalStart).   BIND(1739518200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739516400000 as ?intervalStart).   BIND(1739518200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739520000000 as ?intervalStart).   BIND(1739521800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739520000000 as ?intervalStart).   BIND(1739521800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739534400000 as ?intervalStart).   BIND(1739536200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739520000000 as ?intervalStart).   BIND(1739521800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739523600000 as ?intervalStart).   BIND(1739525400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739523600000 as ?intervalStart).   BIND(1739525400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739523600000 as ?intervalStart).   BIND(1739525400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739523600000 as ?intervalStart).   BIND(1739525400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739527200000 as ?intervalStart).   BIND(1739529000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739527200000 as ?intervalStart).   BIND(1739529000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739527200000 as ?intervalStart).   BIND(1739529000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739527200000 as ?intervalStart).   BIND(1739529000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739530800000 as ?intervalStart).   BIND(1739532600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739530800000 as ?intervalStart).   BIND(1739532600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739530800000 as ?intervalStart).   BIND(1739532600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739530800000 as ?intervalStart).   BIND(1739532600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739520000000 as ?intervalStart).   BIND(1739521800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739894400000 as ?intervalStart).   BIND(1739896200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739898000000 as ?intervalStart).   BIND(1739899800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739898000000 as ?intervalStart).   BIND(1739899800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739898000000 as ?intervalStart).   BIND(1739899800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739883600000 as ?intervalStart).   BIND(1739884500000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739901600000 as ?intervalStart).   BIND(1739903400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739901600000 as ?intervalStart).   BIND(1739903400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739901600000 as ?intervalStart).   BIND(1739903400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739901600000 as ?intervalStart).   BIND(1739903400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739905200000 as ?intervalStart).   BIND(1739907000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739905200000 as ?intervalStart).   BIND(1739907000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739905200000 as ?intervalStart).   BIND(1739907000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739905200000 as ?intervalStart).   BIND(1739907000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739815200000 as ?intervalStart).   BIND(1739817000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739908800000 as ?intervalStart).   BIND(1739910600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739908800000 as ?intervalStart).   BIND(1739910600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739908800000 as ?intervalStart).   BIND(1739910600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739912400000 as ?intervalStart).   BIND(1739914200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739912400000 as ?intervalStart).   BIND(1739914200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739912400000 as ?intervalStart).   BIND(1739914200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739912400000 as ?intervalStart).   BIND(1739914200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739916000000 as ?intervalStart).   BIND(1739917800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739916000000 as ?intervalStart).   BIND(1739917800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739916000000 as ?intervalStart).   BIND(1739917800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739916000000 as ?intervalStart).   BIND(1739917800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739959200000 as ?intervalStart).   BIND(1739961000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739959200000 as ?intervalStart).   BIND(1739961000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739908800000 as ?intervalStart).   BIND(1739910600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739815200000 as ?intervalStart).   BIND(1739817000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738713600000 as ?intervalStart).   BIND(1738715400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739818800000 as ?intervalStart).   BIND(1739820600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739818800000 as ?intervalStart).   BIND(1739820600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739818800000 as ?intervalStart).   BIND(1739820600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739822400000 as ?intervalStart).   BIND(1739824200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739826000000 as ?intervalStart).   BIND(1739827800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739826000000 as ?intervalStart).   BIND(1739827800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739826000000 as ?intervalStart).   BIND(1739827800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739826000000 as ?intervalStart).   BIND(1739827800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739872800000 as ?intervalStart).   BIND(1739874600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739872800000 as ?intervalStart).   BIND(1739874600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739872800000 as ?intervalStart).   BIND(1739874600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739894400000 as ?intervalStart).   BIND(1739896200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739893800000 as ?intervalStart).   BIND(1739894100000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739887800000 as ?intervalStart).   BIND(1739888100000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739889000000 as ?intervalStart).   BIND(1739889300000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739892600000 as ?intervalStart).   BIND(1739892900000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739895000000 as ?intervalStart).   BIND(1739895300000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739890800000 as ?intervalStart).   BIND(1739892600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739890800000 as ?intervalStart).   BIND(1739892600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739890800000 as ?intervalStart).   BIND(1739892600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739890800000 as ?intervalStart).   BIND(1739892600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739836800000 as ?intervalStart).   BIND(1739898000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739836800000 as ?intervalStart).   BIND(1739898900000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738692000000 as ?intervalStart).   BIND(1738693800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739894400000 as ?intervalStart).   BIND(1739896200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739894400000 as ?intervalStart).   BIND(1739896200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739872800000 as ?intervalStart).   BIND(1739874600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739433600000 as ?intervalStart).   BIND(1739435400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739433600000 as ?intervalStart).   BIND(1739435400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739433600000 as ?intervalStart).   BIND(1739435400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739433600000 as ?intervalStart).   BIND(1739435400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739437200000 as ?intervalStart).   BIND(1739439000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739437200000 as ?intervalStart).   BIND(1739439000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739437200000 as ?intervalStart).   BIND(1739439000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739437200000 as ?intervalStart).   BIND(1739439000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739440800000 as ?intervalStart).   BIND(1739442600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739440800000 as ?intervalStart).   BIND(1739442600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739440800000 as ?intervalStart).   BIND(1739442600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739440800000 as ?intervalStart).   BIND(1739442600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739444400000 as ?intervalStart).   BIND(1739446200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739509200000 as ?intervalStart).   BIND(1739511000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739444400000 as ?intervalStart).   BIND(1739446200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739444400000 as ?intervalStart).   BIND(1739446200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739448000000 as ?intervalStart).   BIND(1739449800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739448000000 as ?intervalStart).   BIND(1739449800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739448000000 as ?intervalStart).   BIND(1739449800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739448000000 as ?intervalStart).   BIND(1739449800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739451600000 as ?intervalStart).   BIND(1739453400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739451600000 as ?intervalStart).   BIND(1739453400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739451600000 as ?intervalStart).   BIND(1739453400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739451600000 as ?intervalStart).   BIND(1739453400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739455200000 as ?intervalStart).   BIND(1739457000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739455200000 as ?intervalStart).   BIND(1739457000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739455200000 as ?intervalStart).   BIND(1739457000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739444400000 as ?intervalStart).   BIND(1739446200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739408400000 as ?intervalStart).   BIND(1739410200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739408400000 as ?intervalStart).   BIND(1739410200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739408400000 as ?intervalStart).   BIND(1739410200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739408400000 as ?intervalStart).   BIND(1739410200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739412000000 as ?intervalStart).   BIND(1739413800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739412000000 as ?intervalStart).   BIND(1739413800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739412000000 as ?intervalStart).   BIND(1739413800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739412000000 as ?intervalStart).   BIND(1739413800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739415600000 as ?intervalStart).   BIND(1739417400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739415600000 as ?intervalStart).   BIND(1739417400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739415600000 as ?intervalStart).   BIND(1739417400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739415600000 as ?intervalStart).   BIND(1739417400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739419200000 as ?intervalStart).   BIND(1739421000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739430000000 as ?intervalStart).   BIND(1739431800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739419200000 as ?intervalStart).   BIND(1739421000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739419200000 as ?intervalStart).   BIND(1739421000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739422800000 as ?intervalStart).   BIND(1739424600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739422800000 as ?intervalStart).   BIND(1739424600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739422800000 as ?intervalStart).   BIND(1739424600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739422800000 as ?intervalStart).   BIND(1739424600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739426400000 as ?intervalStart).   BIND(1739428200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739426400000 as ?intervalStart).   BIND(1739428200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739426400000 as ?intervalStart).   BIND(1739428200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739426400000 as ?intervalStart).   BIND(1739428200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739430000000 as ?intervalStart).   BIND(1739431800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739430000000 as ?intervalStart).   BIND(1739431800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739430000000 as ?intervalStart).   BIND(1739431800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739419200000 as ?intervalStart).   BIND(1739421000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739484000000 as ?intervalStart).   BIND(1739485800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739484000000 as ?intervalStart).   BIND(1739485800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739484000000 as ?intervalStart).   BIND(1739485800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739487600000 as ?intervalStart).   BIND(1739489400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739487600000 as ?intervalStart).   BIND(1739489400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739487600000 as ?intervalStart).   BIND(1739489400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739487600000 as ?intervalStart).   BIND(1739489400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739491200000 as ?intervalStart).   BIND(1739493000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739491200000 as ?intervalStart).   BIND(1739493000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739491200000 as ?intervalStart).   BIND(1739493000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739491200000 as ?intervalStart).   BIND(1739493000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739494800000 as ?intervalStart).   BIND(1739496600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739494800000 as ?intervalStart).   BIND(1739496600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739455200000 as ?intervalStart).   BIND(1739457000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739494800000 as ?intervalStart).   BIND(1739496600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739498400000 as ?intervalStart).   BIND(1739500200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739498400000 as ?intervalStart).   BIND(1739500200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739498400000 as ?intervalStart).   BIND(1739500200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739498400000 as ?intervalStart).   BIND(1739500200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739502000000 as ?intervalStart).   BIND(1739503800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739502000000 as ?intervalStart).   BIND(1739503800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739502000000 as ?intervalStart).   BIND(1739503800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739502000000 as ?intervalStart).   BIND(1739503800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739505600000 as ?intervalStart).   BIND(1739507400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739505600000 as ?intervalStart).   BIND(1739507400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739505600000 as ?intervalStart).   BIND(1739507400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739505600000 as ?intervalStart).   BIND(1739507400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739494800000 as ?intervalStart).   BIND(1739496600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739458800000 as ?intervalStart).   BIND(1739460600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739458800000 as ?intervalStart).   BIND(1739460600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739458800000 as ?intervalStart).   BIND(1739460600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739458800000 as ?intervalStart).   BIND(1739460600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739462400000 as ?intervalStart).   BIND(1739464200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739462400000 as ?intervalStart).   BIND(1739464200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739462400000 as ?intervalStart).   BIND(1739464200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739462400000 as ?intervalStart).   BIND(1739464200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739466000000 as ?intervalStart).   BIND(1739467800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739466000000 as ?intervalStart).   BIND(1739467800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739466000000 as ?intervalStart).   BIND(1739467800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739466000000 as ?intervalStart).   BIND(1739467800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739469600000 as ?intervalStart).   BIND(1739471400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739484000000 as ?intervalStart).   BIND(1739485800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739469600000 as ?intervalStart).   BIND(1739471400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739469600000 as ?intervalStart).   BIND(1739471400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739473200000 as ?intervalStart).   BIND(1739475000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739473200000 as ?intervalStart).   BIND(1739475000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739473200000 as ?intervalStart).   BIND(1739475000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739473200000 as ?intervalStart).   BIND(1739475000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739476800000 as ?intervalStart).   BIND(1739478600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739476800000 as ?intervalStart).   BIND(1739478600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739476800000 as ?intervalStart).   BIND(1739478600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739476800000 as ?intervalStart).   BIND(1739478600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739480400000 as ?intervalStart).   BIND(1739482200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739480400000 as ?intervalStart).   BIND(1739482200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739480400000 as ?intervalStart).   BIND(1739482200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739480400000 as ?intervalStart).   BIND(1739482200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739469600000 as ?intervalStart).   BIND(1739471400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738803600000 as ?intervalStart).   BIND(1738805400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738803600000 as ?intervalStart).   BIND(1738805400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738807200000 as ?intervalStart).   BIND(1738809000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738807200000 as ?intervalStart).   BIND(1738809000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738807200000 as ?intervalStart).   BIND(1738809000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738807200000 as ?intervalStart).   BIND(1738809000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738810800000 as ?intervalStart).   BIND(1738812600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738810800000 as ?intervalStart).   BIND(1738812600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738810800000 as ?intervalStart).   BIND(1738812600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738810800000 as ?intervalStart).   BIND(1738812600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738814400000 as ?intervalStart).   BIND(1738816200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738814400000 as ?intervalStart).   BIND(1738816200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738814400000 as ?intervalStart).   BIND(1738816200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739959200000 as ?intervalStart).   BIND(1739961000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738818000000 as ?intervalStart).   BIND(1738819800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738818000000 as ?intervalStart).   BIND(1738819800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738818000000 as ?intervalStart).   BIND(1738819800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738818000000 as ?intervalStart).   BIND(1738819800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738821600000 as ?intervalStart).   BIND(1738823400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738821600000 as ?intervalStart).   BIND(1738823400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738821600000 as ?intervalStart).   BIND(1738823400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738821600000 as ?intervalStart).   BIND(1738823400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738825200000 as ?intervalStart).   BIND(1738827000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738825200000 as ?intervalStart).   BIND(1738827000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738825200000 as ?intervalStart).   BIND(1738827000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738825200000 as ?intervalStart).   BIND(1738827000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738828800000 as ?intervalStart).   BIND(1738830600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738814400000 as ?intervalStart).   BIND(1738816200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738778400000 as ?intervalStart).   BIND(1738780200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738778400000 as ?intervalStart).   BIND(1738780200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738782000000 as ?intervalStart).   BIND(1738783800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738782000000 as ?intervalStart).   BIND(1738783800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738782000000 as ?intervalStart).   BIND(1738783800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738782000000 as ?intervalStart).   BIND(1738783800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738785600000 as ?intervalStart).   BIND(1738787400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738785600000 as ?intervalStart).   BIND(1738787400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738785600000 as ?intervalStart).   BIND(1738787400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738785600000 as ?intervalStart).   BIND(1738787400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738789200000 as ?intervalStart).   BIND(1738791000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738789200000 as ?intervalStart).   BIND(1738791000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738789200000 as ?intervalStart).   BIND(1738791000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738803600000 as ?intervalStart).   BIND(1738805400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738792800000 as ?intervalStart).   BIND(1738794600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738792800000 as ?intervalStart).   BIND(1738794600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738792800000 as ?intervalStart).   BIND(1738794600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738792800000 as ?intervalStart).   BIND(1738794600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738796400000 as ?intervalStart).   BIND(1738798200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738796400000 as ?intervalStart).   BIND(1738798200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738796400000 as ?intervalStart).   BIND(1738798200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738796400000 as ?intervalStart).   BIND(1738798200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738800000000 as ?intervalStart).   BIND(1738801800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738800000000 as ?intervalStart).   BIND(1738801800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738800000000 as ?intervalStart).   BIND(1738801800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738800000000 as ?intervalStart).   BIND(1738801800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738803600000 as ?intervalStart).   BIND(1738805400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738789200000 as ?intervalStart).   BIND(1738791000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738854000000 as ?intervalStart).   BIND(1738855800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738857600000 as ?intervalStart).   BIND(1738859400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738857600000 as ?intervalStart).   BIND(1738859400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738857600000 as ?intervalStart).   BIND(1738859400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738857600000 as ?intervalStart).   BIND(1738859400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738861200000 as ?intervalStart).   BIND(1738863000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738861200000 as ?intervalStart).   BIND(1738863000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738861200000 as ?intervalStart).   BIND(1738863000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738861200000 as ?intervalStart).   BIND(1738863000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738864800000 as ?intervalStart).   BIND(1738866600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738864800000 as ?intervalStart).   BIND(1738866600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738864800000 as ?intervalStart).   BIND(1738866600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738864800000 as ?intervalStart).   BIND(1738866600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738828800000 as ?intervalStart).   BIND(1738830600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738868400000 as ?intervalStart).   BIND(1738870200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738868400000 as ?intervalStart).   BIND(1738870200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738868400000 as ?intervalStart).   BIND(1738870200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738872000000 as ?intervalStart).   BIND(1738873800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738872000000 as ?intervalStart).   BIND(1738873800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738872000000 as ?intervalStart).   BIND(1738873800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738872000000 as ?intervalStart).   BIND(1738873800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738875600000 as ?intervalStart).   BIND(1738877400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738875600000 as ?intervalStart).   BIND(1738877400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738875600000 as ?intervalStart).   BIND(1738877400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738875600000 as ?intervalStart).   BIND(1738877400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738879200000 as ?intervalStart).   BIND(1738881000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738879200000 as ?intervalStart).   BIND(1738881000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738868400000 as ?intervalStart).   BIND(1738870200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738828800000 as ?intervalStart).   BIND(1738830600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738828800000 as ?intervalStart).   BIND(1738830600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738832400000 as ?intervalStart).   BIND(1738834200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738832400000 as ?intervalStart).   BIND(1738834200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738832400000 as ?intervalStart).   BIND(1738834200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738832400000 as ?intervalStart).   BIND(1738834200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738836000000 as ?intervalStart).   BIND(1738837800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738836000000 as ?intervalStart).   BIND(1738837800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738836000000 as ?intervalStart).   BIND(1738837800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738836000000 as ?intervalStart).   BIND(1738837800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738839600000 as ?intervalStart).   BIND(1738841400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738839600000 as ?intervalStart).   BIND(1738841400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738839600000 as ?intervalStart).   BIND(1738841400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738854000000 as ?intervalStart).   BIND(1738855800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738843200000 as ?intervalStart).   BIND(1738845000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738843200000 as ?intervalStart).   BIND(1738845000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738843200000 as ?intervalStart).   BIND(1738845000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738843200000 as ?intervalStart).   BIND(1738845000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738846800000 as ?intervalStart).   BIND(1738848600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738846800000 as ?intervalStart).   BIND(1738848600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738846800000 as ?intervalStart).   BIND(1738848600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738846800000 as ?intervalStart).   BIND(1738848600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738850400000 as ?intervalStart).   BIND(1738852200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738850400000 as ?intervalStart).   BIND(1738852200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738850400000 as ?intervalStart).   BIND(1738852200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738850400000 as ?intervalStart).   BIND(1738852200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738854000000 as ?intervalStart).   BIND(1738855800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738854000000 as ?intervalStart).   BIND(1738855800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738839600000 as ?intervalStart).   BIND(1738841400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738702800000 as ?intervalStart).   BIND(1738704600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738706400000 as ?intervalStart).   BIND(1738708200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738706400000 as ?intervalStart).   BIND(1738708200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738706400000 as ?intervalStart).   BIND(1738708200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738706400000 as ?intervalStart).   BIND(1738708200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738710000000 as ?intervalStart).   BIND(1738711800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738710000000 as ?intervalStart).   BIND(1738711800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738710000000 as ?intervalStart).   BIND(1738711800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738710000000 as ?intervalStart).   BIND(1738711800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738713600000 as ?intervalStart).   BIND(1738715400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738713600000 as ?intervalStart).   BIND(1738715400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738713600000 as ?intervalStart).   BIND(1738715400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739898000000 as ?intervalStart).   BIND(1739899800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738778400000 as ?intervalStart).   BIND(1738780200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738717200000 as ?intervalStart).   BIND(1738719000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738717200000 as ?intervalStart).   BIND(1738719000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738717200000 as ?intervalStart).   BIND(1738719000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738720800000 as ?intervalStart).   BIND(1738722600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738720800000 as ?intervalStart).   BIND(1738722600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738720800000 as ?intervalStart).   BIND(1738722600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738720800000 as ?intervalStart).   BIND(1738722600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738724400000 as ?intervalStart).   BIND(1738726200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738724400000 as ?intervalStart).   BIND(1738726200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738724400000 as ?intervalStart).   BIND(1738726200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738724400000 as ?intervalStart).   BIND(1738726200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738728000000 as ?intervalStart).   BIND(1738729800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738728000000 as ?intervalStart).   BIND(1738729800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738717200000 as ?intervalStart).   BIND(1738719000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738681200000 as ?intervalStart).   BIND(1738683000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738681200000 as ?intervalStart).   BIND(1738683000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738681200000 as ?intervalStart).   BIND(1738683000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738681200000 as ?intervalStart).   BIND(1738683000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738684800000 as ?intervalStart).   BIND(1738686600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738684800000 as ?intervalStart).   BIND(1738686600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738684800000 as ?intervalStart).   BIND(1738686600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738684800000 as ?intervalStart).   BIND(1738686600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739818800000 as ?intervalStart).   BIND(1739820600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738688400000 as ?intervalStart).   BIND(1738690200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738688400000 as ?intervalStart).   BIND(1738690200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738688400000 as ?intervalStart).   BIND(1738690200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738688400000 as ?intervalStart).   BIND(1738690200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738702800000 as ?intervalStart).   BIND(1738704600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738692000000 as ?intervalStart).   BIND(1738693800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738692000000 as ?intervalStart).   BIND(1738693800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739959200000 as ?intervalStart).   BIND(1739961000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738695600000 as ?intervalStart).   BIND(1738697400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738695600000 as ?intervalStart).   BIND(1738697400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738695600000 as ?intervalStart).   BIND(1738697400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738695600000 as ?intervalStart).   BIND(1738697400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738699200000 as ?intervalStart).   BIND(1738701000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738699200000 as ?intervalStart).   BIND(1738701000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738699200000 as ?intervalStart).   BIND(1738701000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738699200000 as ?intervalStart).   BIND(1738701000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738702800000 as ?intervalStart).   BIND(1738704600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738702800000 as ?intervalStart).   BIND(1738704600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738692000000 as ?intervalStart).   BIND(1738693800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738756800000 as ?intervalStart).   BIND(1738758600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738756800000 as ?intervalStart).   BIND(1738758600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738756800000 as ?intervalStart).   BIND(1738758600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738756800000 as ?intervalStart).   BIND(1738758600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738760400000 as ?intervalStart).   BIND(1738762200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738760400000 as ?intervalStart).   BIND(1738762200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738760400000 as ?intervalStart).   BIND(1738762200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738760400000 as ?intervalStart).   BIND(1738762200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738663800000 as ?intervalStart).   BIND(1738750200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738577400000 as ?intervalStart).   BIND(1738663800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738764000000 as ?intervalStart).   BIND(1738765800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738764000000 as ?intervalStart).   BIND(1738765800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738764000000 as ?intervalStart).   BIND(1738765800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738728000000 as ?intervalStart).   BIND(1738729800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738767600000 as ?intervalStart).   BIND(1738769400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738767600000 as ?intervalStart).   BIND(1738769400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738767600000 as ?intervalStart).   BIND(1738769400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738767600000 as ?intervalStart).   BIND(1738769400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738771200000 as ?intervalStart).   BIND(1738773000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738771200000 as ?intervalStart).   BIND(1738773000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738771200000 as ?intervalStart).   BIND(1738773000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738771200000 as ?intervalStart).   BIND(1738773000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738774800000 as ?intervalStart).   BIND(1738776600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738774800000 as ?intervalStart).   BIND(1738776600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738774800000 as ?intervalStart).   BIND(1738776600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738774800000 as ?intervalStart).   BIND(1738776600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738778400000 as ?intervalStart).   BIND(1738780200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738764000000 as ?intervalStart).   BIND(1738765800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738728000000 as ?intervalStart).   BIND(1738729800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738731600000 as ?intervalStart).   BIND(1738733400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738731600000 as ?intervalStart).   BIND(1738733400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738731600000 as ?intervalStart).   BIND(1738733400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738731600000 as ?intervalStart).   BIND(1738733400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738735200000 as ?intervalStart).   BIND(1738737000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738735200000 as ?intervalStart).   BIND(1738737000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738735200000 as ?intervalStart).   BIND(1738737000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738735200000 as ?intervalStart).   BIND(1738737000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738738800000 as ?intervalStart).   BIND(1738740600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738738800000 as ?intervalStart).   BIND(1738740600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738738800000 as ?intervalStart).   BIND(1738740600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738738800000 as ?intervalStart).   BIND(1738740600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738753200000 as ?intervalStart).   BIND(1738755000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738742400000 as ?intervalStart).   BIND(1738744200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738742400000 as ?intervalStart).   BIND(1738744200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738742400000 as ?intervalStart).   BIND(1738744200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738746000000 as ?intervalStart).   BIND(1738747800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738746000000 as ?intervalStart).   BIND(1738747800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738746000000 as ?intervalStart).   BIND(1738747800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738746000000 as ?intervalStart).   BIND(1738747800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738749600000 as ?intervalStart).   BIND(1738751400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738749600000 as ?intervalStart).   BIND(1738751400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738749600000 as ?intervalStart).   BIND(1738751400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738749600000 as ?intervalStart).   BIND(1738751400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738753200000 as ?intervalStart).   BIND(1738755000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738753200000 as ?intervalStart).   BIND(1738755000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738753200000 as ?intervalStart).   BIND(1738755000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738742400000 as ?intervalStart).   BIND(1738744200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739008800000 as ?intervalStart).   BIND(1739010600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739008800000 as ?intervalStart).   BIND(1739010600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739008800000 as ?intervalStart).   BIND(1739010600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739012400000 as ?intervalStart).   BIND(1739014200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739012400000 as ?intervalStart).   BIND(1739014200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739012400000 as ?intervalStart).   BIND(1739014200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739012400000 as ?intervalStart).   BIND(1739014200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739016000000 as ?intervalStart).   BIND(1739017800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739016000000 as ?intervalStart).   BIND(1739017800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739016000000 as ?intervalStart).   BIND(1739017800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739016000000 as ?intervalStart).   BIND(1739017800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739019600000 as ?intervalStart).   BIND(1739021400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739019600000 as ?intervalStart).   BIND(1739021400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738879200000 as ?intervalStart).   BIND(1738881000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739019600000 as ?intervalStart).   BIND(1739021400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739023200000 as ?intervalStart).   BIND(1739025000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739023200000 as ?intervalStart).   BIND(1739025000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739023200000 as ?intervalStart).   BIND(1739025000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739023200000 as ?intervalStart).   BIND(1739025000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739026800000 as ?intervalStart).   BIND(1739028600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739026800000 as ?intervalStart).   BIND(1739028600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739026800000 as ?intervalStart).   BIND(1739028600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739026800000 as ?intervalStart).   BIND(1739028600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739030400000 as ?intervalStart).   BIND(1739032200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739030400000 as ?intervalStart).   BIND(1739032200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739030400000 as ?intervalStart).   BIND(1739032200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739030400000 as ?intervalStart).   BIND(1739032200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739019600000 as ?intervalStart).   BIND(1739021400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738983600000 as ?intervalStart).   BIND(1738985400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738983600000 as ?intervalStart).   BIND(1738985400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738983600000 as ?intervalStart).   BIND(1738985400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738987200000 as ?intervalStart).   BIND(1738989000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738987200000 as ?intervalStart).   BIND(1738989000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738987200000 as ?intervalStart).   BIND(1738989000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738987200000 as ?intervalStart).   BIND(1738989000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738990800000 as ?intervalStart).   BIND(1738992600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738990800000 as ?intervalStart).   BIND(1738992600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738990800000 as ?intervalStart).   BIND(1738992600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738990800000 as ?intervalStart).   BIND(1738992600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738994400000 as ?intervalStart).   BIND(1738996200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738994400000 as ?intervalStart).   BIND(1738996200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739008800000 as ?intervalStart).   BIND(1739010600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738994400000 as ?intervalStart).   BIND(1738996200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738998000000 as ?intervalStart).   BIND(1738999800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738998000000 as ?intervalStart).   BIND(1738999800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738998000000 as ?intervalStart).   BIND(1738999800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738998000000 as ?intervalStart).   BIND(1738999800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739001600000 as ?intervalStart).   BIND(1739003400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739001600000 as ?intervalStart).   BIND(1739003400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739001600000 as ?intervalStart).   BIND(1739003400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739001600000 as ?intervalStart).   BIND(1739003400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739005200000 as ?intervalStart).   BIND(1739007000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739005200000 as ?intervalStart).   BIND(1739007000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739005200000 as ?intervalStart).   BIND(1739007000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739005200000 as ?intervalStart).   BIND(1739007000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738994400000 as ?intervalStart).   BIND(1738996200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739181600000 as ?intervalStart).   BIND(1739183400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739181600000 as ?intervalStart).   BIND(1739183400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739185200000 as ?intervalStart).   BIND(1739187000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739185200000 as ?intervalStart).   BIND(1739187000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739185200000 as ?intervalStart).   BIND(1739187000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739185200000 as ?intervalStart).   BIND(1739187000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739188800000 as ?intervalStart).   BIND(1739190600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739188800000 as ?intervalStart).   BIND(1739190600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739188800000 as ?intervalStart).   BIND(1739190600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739188800000 as ?intervalStart).   BIND(1739190600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739192400000 as ?intervalStart).   BIND(1739194200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739192400000 as ?intervalStart).   BIND(1739194200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739192400000 as ?intervalStart).   BIND(1739194200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739034000000 as ?intervalStart).   BIND(1739035800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739196000000 as ?intervalStart).   BIND(1739197800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739196000000 as ?intervalStart).   BIND(1739197800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739196000000 as ?intervalStart).   BIND(1739197800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739196000000 as ?intervalStart).   BIND(1739197800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739199600000 as ?intervalStart).   BIND(1739201400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739199600000 as ?intervalStart).   BIND(1739201400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739199600000 as ?intervalStart).   BIND(1739201400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739199600000 as ?intervalStart).   BIND(1739201400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739203200000 as ?intervalStart).   BIND(1739205000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739203200000 as ?intervalStart).   BIND(1739205000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739203200000 as ?intervalStart).   BIND(1739205000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739203200000 as ?intervalStart).   BIND(1739205000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739206800000 as ?intervalStart).   BIND(1739208600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739192400000 as ?intervalStart).   BIND(1739194200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739034000000 as ?intervalStart).   BIND(1739035800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739034000000 as ?intervalStart).   BIND(1739035800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739034000000 as ?intervalStart).   BIND(1739035800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739037600000 as ?intervalStart).   BIND(1739039400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739037600000 as ?intervalStart).   BIND(1739039400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739037600000 as ?intervalStart).   BIND(1739039400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739037600000 as ?intervalStart).   BIND(1739039400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739041200000 as ?intervalStart).   BIND(1739043000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739041200000 as ?intervalStart).   BIND(1739043000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739041200000 as ?intervalStart).   BIND(1739043000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739041200000 as ?intervalStart).   BIND(1739043000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739044800000 as ?intervalStart).   BIND(1739046600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739044800000 as ?intervalStart).   BIND(1739046600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739181600000 as ?intervalStart).   BIND(1739183400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739044800000 as ?intervalStart).   BIND(1739046600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739048400000 as ?intervalStart).   BIND(1739050200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739048400000 as ?intervalStart).   BIND(1739050200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739048400000 as ?intervalStart).   BIND(1739050200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739048400000 as ?intervalStart).   BIND(1739050200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739052000000 as ?intervalStart).   BIND(1739053800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739052000000 as ?intervalStart).   BIND(1739053800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739052000000 as ?intervalStart).   BIND(1739053800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739052000000 as ?intervalStart).   BIND(1739053800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739178000000 as ?intervalStart).   BIND(1739179800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739178000000 as ?intervalStart).   BIND(1739179800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739178000000 as ?intervalStart).   BIND(1739179800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739178000000 as ?intervalStart).   BIND(1739179800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1739181600000 as ?intervalStart).   BIND(1739183400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1739044800000 as ?intervalStart).   BIND(1739046600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738908000000 as ?intervalStart).   BIND(1738909800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738908000000 as ?intervalStart).   BIND(1738909800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738908000000 as ?intervalStart).   BIND(1738909800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738908000000 as ?intervalStart).   BIND(1738909800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738911600000 as ?intervalStart).   BIND(1738913400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738911600000 as ?intervalStart).   BIND(1738913400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738911600000 as ?intervalStart).   BIND(1738913400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738911600000 as ?intervalStart).   BIND(1738913400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738915200000 as ?intervalStart).   BIND(1738917000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738915200000 as ?intervalStart).   BIND(1738917000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738915200000 as ?intervalStart).   BIND(1738917000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738915200000 as ?intervalStart).   BIND(1738917000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738918800000 as ?intervalStart).   BIND(1738920600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738983600000 as ?intervalStart).   BIND(1738985400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738918800000 as ?intervalStart).   BIND(1738920600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738918800000 as ?intervalStart).   BIND(1738920600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738922400000 as ?intervalStart).   BIND(1738924200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738922400000 as ?intervalStart).   BIND(1738924200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738922400000 as ?intervalStart).   BIND(1738924200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738922400000 as ?intervalStart).   BIND(1738924200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738926000000 as ?intervalStart).   BIND(1738927800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738926000000 as ?intervalStart).   BIND(1738927800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738926000000 as ?intervalStart).   BIND(1738927800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738926000000 as ?intervalStart).   BIND(1738927800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738929600000 as ?intervalStart).   BIND(1738931400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738929600000 as ?intervalStart).   BIND(1738931400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738929600000 as ?intervalStart).   BIND(1738931400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738918800000 as ?intervalStart).   BIND(1738920600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738879200000 as ?intervalStart).   BIND(1738881000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738882800000 as ?intervalStart).   BIND(1738884600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738882800000 as ?intervalStart).   BIND(1738884600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738882800000 as ?intervalStart).   BIND(1738884600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738882800000 as ?intervalStart).   BIND(1738884600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738886400000 as ?intervalStart).   BIND(1738888200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738886400000 as ?intervalStart).   BIND(1738888200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738886400000 as ?intervalStart).   BIND(1738888200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738886400000 as ?intervalStart).   BIND(1738888200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738890000000 as ?intervalStart).   BIND(1738891800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738890000000 as ?intervalStart).   BIND(1738891800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738890000000 as ?intervalStart).   BIND(1738891800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738890000000 as ?intervalStart).   BIND(1738891800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738904400000 as ?intervalStart).   BIND(1738906200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738893600000 as ?intervalStart).   BIND(1738895400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738893600000 as ?intervalStart).   BIND(1738895400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738893600000 as ?intervalStart).   BIND(1738895400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738897200000 as ?intervalStart).   BIND(1738899000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738897200000 as ?intervalStart).   BIND(1738899000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738897200000 as ?intervalStart).   BIND(1738899000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738897200000 as ?intervalStart).   BIND(1738899000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738900800000 as ?intervalStart).   BIND(1738902600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738900800000 as ?intervalStart).   BIND(1738902600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738900800000 as ?intervalStart).   BIND(1738902600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738900800000 as ?intervalStart).   BIND(1738902600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738904400000 as ?intervalStart).   BIND(1738906200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738904400000 as ?intervalStart).   BIND(1738906200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738904400000 as ?intervalStart).   BIND(1738906200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738893600000 as ?intervalStart).   BIND(1738895400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738958400000 as ?intervalStart).   BIND(1738960200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738958400000 as ?intervalStart).   BIND(1738960200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738958400000 as ?intervalStart).   BIND(1738960200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738962000000 as ?intervalStart).   BIND(1738963800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738962000000 as ?intervalStart).   BIND(1738963800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738962000000 as ?intervalStart).   BIND(1738963800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738962000000 as ?intervalStart).   BIND(1738963800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738965600000 as ?intervalStart).   BIND(1738967400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738965600000 as ?intervalStart).   BIND(1738967400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738965600000 as ?intervalStart).   BIND(1738967400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738965600000 as ?intervalStart).   BIND(1738967400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738969200000 as ?intervalStart).   BIND(1738971000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738969200000 as ?intervalStart).   BIND(1738971000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738929600000 as ?intervalStart).   BIND(1738931400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738969200000 as ?intervalStart).   BIND(1738971000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738972800000 as ?intervalStart).   BIND(1738974600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738972800000 as ?intervalStart).   BIND(1738974600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738972800000 as ?intervalStart).   BIND(1738974600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738972800000 as ?intervalStart).   BIND(1738974600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738976400000 as ?intervalStart).   BIND(1738978200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738976400000 as ?intervalStart).   BIND(1738978200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738976400000 as ?intervalStart).   BIND(1738978200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738976400000 as ?intervalStart).   BIND(1738978200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738980000000 as ?intervalStart).   BIND(1738981800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738980000000 as ?intervalStart).   BIND(1738981800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738980000000 as ?intervalStart).   BIND(1738981800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738980000000 as ?intervalStart).   BIND(1738981800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738969200000 as ?intervalStart).   BIND(1738971000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738933200000 as ?intervalStart).   BIND(1738935000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738933200000 as ?intervalStart).   BIND(1738935000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738933200000 as ?intervalStart).   BIND(1738935000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738933200000 as ?intervalStart).   BIND(1738935000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738936800000 as ?intervalStart).   BIND(1738938600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738936800000 as ?intervalStart).   BIND(1738938600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738936800000 as ?intervalStart).   BIND(1738938600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738936800000 as ?intervalStart).   BIND(1738938600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738940400000 as ?intervalStart).   BIND(1738942200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738940400000 as ?intervalStart).   BIND(1738942200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738940400000 as ?intervalStart).   BIND(1738942200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738940400000 as ?intervalStart).   BIND(1738942200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738944000000 as ?intervalStart).   BIND(1738945800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738958400000 as ?intervalStart).   BIND(1738960200000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738944000000 as ?intervalStart).   BIND(1738945800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738944000000 as ?intervalStart).   BIND(1738945800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738947600000 as ?intervalStart).   BIND(1738949400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738947600000 as ?intervalStart).   BIND(1738949400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738947600000 as ?intervalStart).   BIND(1738949400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738947600000 as ?intervalStart).   BIND(1738949400000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738951200000 as ?intervalStart).   BIND(1738953000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738951200000 as ?intervalStart).   BIND(1738953000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738951200000 as ?intervalStart).   BIND(1738953000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738951200000 as ?intervalStart).   BIND(1738953000000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738954800000 as ?intervalStart).   BIND(1738956600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   FILTER(?pod = <https://kubernetes.local/#monitoring.monitoring-stack-alertmanager-0>)   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738954800000 as ?intervalStart).   BIND(1738956600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738954800000 as ?intervalStart).   BIND(1738956600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER(regex(str(?graphURI), "^timestamp:"))       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       filter(?node = <https://kubernetes.local/#glaciation-testm1w5-worker01>)     }     ORDER BY DESC(?timestamp)   } }
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>  SELECT ?graphURI ?node ?measurement ?measurementName ?timestamp ?value ?unit WHERE {   BIND(1738954800000 as ?intervalStart).   BIND(1738956600000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     SELECT ?node ?measurement ?measurementName ?timestamp ?value ?unit     WHERE {       ?node rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#WorkProducingResource> .       ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "KubernetesWorkerNode".       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }       UNION       {         ?node <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasSubResource> ?subResource.         ?subResource <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?timestamp.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.       }     }     ORDER BY DESC(?timestamp)   } }
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>  SELECT ?pod ?node ?measurement ?measurementName ?timestamp ?unit ?value ?startTime ?endTime WHERE {   BIND(1738944000000 as ?intervalStart).   BIND(1738945800000 as ?intervalEnd).   {     SELECT ?graphURI ?timeslice WHERE {       GRAPH ?graphURI {}       FILTER regex(str(?graphURI), "^timestamp:")       BIND(xsd:integer(replace(str(?graphURI), "^timestamp:", "")) as ?timeslice).     }   }   FILTER(?timeslice >= ?intervalStart && ?timeslice < ?intervalEnd)   GRAPH ?graphURI {     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasMeasurement> ?measurement.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         BIND(0 as ?ts).         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#maxValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }     UNION     {       SELECT ?pod ?measurement ?node ?measurementName ?ts ?value ?unit ?startTime ?endTime WHERE {         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "Pod".         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#consumes> ?node.         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> "ReplicaSet".         ?replicaset rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?replicaset <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?pod.         ?task_definition rdf:type <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#AssignedTask> .         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#makes> ?replicaset.         ?task_definition <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasConstraint> ?measurement.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasDescription> ?measurementName.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasTimestamp> ?ts.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasValue> ?value.         ?measurement <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#measuredIn> ?unit.         ?pod <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#hasStatus> ?status.         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#startTime> ?startTime }         OPTIONAL{ ?status <https://glaciation-project.eu/MetadataReferenceModel/1.0.0/#endTime> ?endTime }       }     }   }   BIND(IF(?ts = 0,xsd:integer(replace(str(?graphURI), "^timestamp:", "")),?ts) as ?timestamp) } ORDER BY DESC(?measurement)
